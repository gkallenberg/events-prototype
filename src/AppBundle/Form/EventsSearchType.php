<?php
namespace AppBundle\Form;

use AppBundle\Form\EventListener\EventsSearchListener;
use Symfony\Component\DependencyInjection\Tests\Compiler\H;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\OptionsResolver\OptionsResolver;

/**
 * Class EventsSearchForm
 * @package AppBundle\Form
 */
class EventsSearchType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $date = new \DateTimeImmutable('now', new \DateTimeZone('America/New_York'));
        $week = $date->add(new \DateInterval('P7D'));
        $month = $date->add(new \DateInterval('P1M'));

        $builder
            ->add('nearby', CheckboxType::class, [
                'label' => 'Nearby',
                'label_attr' => ['class' => 'form-check-label'],
                'required' => false,
            ])
            ->add('category', ChoiceType::class, [
                'label' => 'Show me',
                'choices' => [
                    'Everything' => 'all',
                    'Author Talks & Conversations' => '8171',
                    'Busineess & Finance' => '8176',
                    'Career & Education' => '8177',
                    'Children & Family' => '8174',
                    'Computers & Workshops' => '8175',
                    'Exhibitions & Tours' => '8172',
                    'Performing Arts & Films' => '8173',
                ]
            ])
            ->add('location', ChoiceType::class, [
                'label' => 'in',
                'choices' => [
                    'Everywhere' => 'all',
                    'The Bronx' => 'Bronx',
                    'Manhattan' => 'Manhattan',
                    'Staten Island' => 'Staten Island',
                ]
            ])
            ->add('audience', ChoiceType::class, [
                'label' => 'for',
                'choices' => [
                    'For Everyone' => 'all',
                    'Adults' => 'Adult',
                    'Children' => 'Children',
                    'Teens/Young Adults' => 'Young Adult',
                ]
            ])
            ->add('date', ChoiceType::class, [
                'label' => 'happening',
                'choices' => [
                    'At Anytime' => 'all',
                    'Today' => '[' . $date->format('Y-m-d') .'T00:00:00Z TO ' . $date->format('Y-m-d') .'T23:59:59Z]',
                    'This Week' => '[' . $date->format('Y-m-d') .'T00:00:00Z TO '. $week->format('Y-m-d') .'T23:59:59Z]',
                    'This Month' => '[' . $date->format('Y-m-d') .'T00:00:00Z TO '. $month->format('Y-m-d') .'T23:59:59Z]',
                ],
            ])
            ->add('start', HiddenType::class)
            ->add('rows', HiddenType::class)
            ->add('submit', SubmitType::class, ['label' => 'Search'])
            ->addEventListener(FormEvents::POST_SUBMIT, [$this, 'onPostSubmit'])
        ;

        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
    }

    public function onPostSubmit(FormEvent $event)
    {
        $category = $event->getForm()->getData();
        $event->setData($category);
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'AppBundle\Entity\EventsSearch',
        ));
    }
}
